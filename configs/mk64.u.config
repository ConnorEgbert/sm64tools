// ROM splitter configuration file
name = "Mario Kart 64 (U)";

// checksums from ROM header offsets 0x10 and 0x14
// used for auto configuration detection
checksum1 = 0x3E5055B6;
checksum2 = 0x2E92DA52;

// base filename used for outputs (please, no spaces)
basename = "mk64.u";

// memory map from KSEG0 RAM addresses to ROM offsets
// these were decoded from DMA accesses
// 8028DF00-802BA100 were copied in FF chunks for some reason
memory =
(
   // start     end         ram-to-rom
   // (0x80000400, 0x80100400, 0x7FFFF400), // 001000-100FFF 100000
   (0x80000400, 0x800F690F, 0x7FFFF400), // 001000-0F750F 0F6510
   (0x80280000, 0x802874A0, 0x8015C9C0), // 123640-12AAE0 0074A0
   (0x8028DF00, 0x802BA0FF, 0x801969F0)  // 0F7510-12361F 02C200
);

// ranges to split the ROM into
// types:
//   asm      - MIPS assembly block.  Symbol names are in 'labels' list below
//   behavior - behavior script
//   bin      - raw binary, usually data
//   header   - ROM header block
//   instrset - instrument set
//   level    - level commands
//   m64      - M64 music sequence bank
//   mio0     - MIO0 compressed data block.  may have texture breakdown
//   ptr      - RAM address or ROM offset pointer
//
//   textures types:
//      rgba   - 16-bit RGBA (5-5-5-1)
//      ia     - 16/8/4/1-bit greyscale
//      skybox - grid of 32x32 16-bit RGBA
ranges =
(
   // start,  end,      type,     label
   (0x000000, 0x000040, "header", "header"),
   (0x000040, 0x001000, "bin",    "boot"),
   (0x001000, 0x0DD044, "asm"),
   // 0x0DD044, 0x0F7510, data
//   (0x0F3A84, 0x0F3A98, "ptr",    "JumpTable"), // 800F2E84
//   (0x0F3AE0, 0x0F3B04, "ptr",    "JumpTable"), // 800F2EE0
   (0x0F7510, 0x121A24, "asm"), // TODO: not sure if this is all asm
   (0x122390, 0x122750, "ptr",  "table_levels", 12),
   (0x123640, 0x12AAE0, "asm"), // TODO: not sure if this is all asm
   (0x132B50, 0x145470, "mio0", "some_textures", (
      //offset, type, depth,width,height
      (0x00200, "rgba", 16,  32, 64),
      (0x01EE8, "rgba", 16,  32, 64),
      (0x03348, "rgba", 16,  32, 32),
      (0x03B48, "rgba", 16,  64, 32),
      (0x06AD8, "ia",    8,  32, 32),
      (0x09958, "ia",    8,  32, 96),
      (0x0A958, "rgba", 16,  32,  8),
      (0x0AB58, "rgba", 16,  32,  8),
      (0x0AD58, "rgba", 16,  32, 16),
      (0x0B158, "rgba", 16,  32, 16),
      (0x0B558, "rgba", 16,  32, 16),
      (0x0B958, "rgba", 16,  32, 16),
      (0x0BD58, "rgba", 16,  32, 16),
      (0x0C158, "rgba", 16,  32, 16),
      (0x0C558, "rgba", 16, 104, 16),
      (0x0D258, "ia",    8,  64, 64),
      (0x0E258, "ia",    8,  64, 64),
      (0x0F258, "ia",    8,  64, 64),
      (0x10258, "ia",    8,  64, 64),
      (0x11258, "ia",    8,  64, 64),
      (0x12258, "ia",    8,  64, 64),
      (0x13258, "ia",    8,  64, 64),
      (0x14258, "ia",    8,  64, 64),
      (0x15258, "ia",    4,  64, 64),
      (0x15A58, "ia",    4,  64, 64),
      (0x16258, "ia",    4,  64, 64),
      (0x16A58, "ia",    4,  64, 64))
   ),
   (0x729A30, 0x72A704, "mio0", "mario_face_01",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72A704, 0x72B3C4, "mio0", "mario_face_02",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72B3C4, 0x72C080, "mio0", "mario_face_03",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72C080, 0x72CCEC, "mio0", "mario_face_04",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72CCEC, 0x72D938, "mio0", "mario_face_05",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72D938, 0x72E578, "mio0", "mario_face_06",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72E578, 0x72F28C, "mio0", "mario_face_07",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72F28C, 0x72FF98, "mio0", "mario_face_08",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x72FF98, 0x730C9C, "mio0", "mario_face_09",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x730C9C, 0x73197C, "mio0", "mario_face_10",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73197C, 0x732678, "mio0", "mario_face_11",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x732678, 0x733374, "mio0", "mario_face_12",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x733374, 0x7340B8, "mio0", "mario_face_13",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7340B8, 0x734E0C, "mio0", "mario_face_14",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x734E0C, 0x735BB0, "mio0", "mario_face_15",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x735BB0, 0x736950, "mio0", "mario_face_16",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x736950, 0x737494, "mio0", "mario_face_17",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x737494, 0x7380B0, "mio0", "luigi_face_01",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7380B0, 0x738CD0, "mio0", "luigi_face_02",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x738CD0, 0x7398F0, "mio0", "luigi_face_03",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7398F0, 0x73A4D8, "mio0", "luigi_face_04",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73A4D8, 0x73B0C0, "mio0", "luigi_face_05",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73B0C0, 0x73BC8C, "mio0", "luigi_face_06",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73BC8C, 0x73C8B4, "mio0", "luigi_face_07",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73C8B4, 0x73D4E8, "mio0", "luigi_face_08",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73D4E8, 0x73E174, "mio0", "luigi_face_09",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73E174, 0x73EDF4, "mio0", "luigi_face_10",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73EDF4, 0x73FA84, "mio0", "luigi_face_11",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x73FA84, 0x740744, "mio0", "luigi_face_12",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x740744, 0x741474, "mio0", "luigi_face_13",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x741474, 0x7421A0, "mio0", "luigi_face_14",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7421A0, 0x742EE8, "mio0", "luigi_face_15",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x742EE8, 0x743C3C, "mio0", "luigi_face_16",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x743C3C, 0x744674, "mio0", "luigi_face_17",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x744674, 0x74552C, "mio0", "peach_face_01",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74552C, 0x7463D8, "mio0", "peach_face_02",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7463D8, 0x747294, "mio0", "peach_face_03",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x747294, 0x74814C, "mio0", "peach_face_04",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74814C, 0x748FD4, "mio0", "peach_face_05",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x748FD4, 0x749E74, "mio0", "peach_face_06",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x749E74, 0x74AD3C, "mio0", "peach_face_07",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74AD3C, 0x74BC2C, "mio0", "peach_face_08",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74BC2C, 0x74CB3C, "mio0", "peach_face_09",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74CB3C, 0x74DAF0, "mio0", "peach_face_10",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74DAF0, 0x74EAD4, "mio0", "peach_face_11",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74EAD4, 0x74FB20, "mio0", "peach_face_12",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x74FB20, 0x750B58, "mio0", "peach_face_13",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x750B58, 0x751B3C, "mio0", "peach_face_14",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x751B3C, 0x752AD0, "mio0", "peach_face_15",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x752AD0, 0x753A58, "mio0", "peach_face_16",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x753A58, 0x754900, "mio0", "peach_face_17",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x754900, 0x7552BC, "mio0", "toad_face_01",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7552BC, 0x755C70, "mio0", "toad_face_02",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x755C70, 0x75662C, "mio0", "toad_face_03",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75662C, 0x756FE4, "mio0", "toad_face_04",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x756FE4, 0x7579A0, "mio0", "toad_face_05",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7579A0, 0x758340, "mio0", "toad_face_06",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x758340, 0x758CD8, "mio0", "toad_face_07",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x758CD8, 0x7596A4, "mio0", "toad_face_08",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7596A4, 0x75A058, "mio0", "toad_face_09",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75A058, 0x75AA40, "mio0", "toad_face_10",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75AA40, 0x75B454, "mio0", "toad_face_11",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75B454, 0x75BEAC, "mio0", "toad_face_12",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75BEAC, 0x75C90C, "mio0", "toad_face_13",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75C90C, 0x75D38C, "mio0", "toad_face_14",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75D38C, 0x75DE00, "mio0", "toad_face_15",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75DE00, 0x75E860, "mio0", "toad_face_16",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75E860, 0x75F1C4, "mio0", "toad_face_17",   ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75F1C4, 0x75FCB0, "mio0", "yoshi_face_01",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x75FCB0, 0x760794, "mio0", "yoshi_face_02",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x760794, 0x761274, "mio0", "yoshi_face_03",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x761274, 0x761D28, "mio0", "yoshi_face_04",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x761D28, 0x762798, "mio0", "yoshi_face_05",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x762798, 0x7631E0, "mio0", "yoshi_face_06",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7631E0, 0x763D04, "mio0", "yoshi_face_07",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x763D04, 0x764730, "mio0", "yoshi_face_08",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x764730, 0x7650EC, "mio0", "yoshi_face_09",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7650EC, 0x765A98, "mio0", "yoshi_face_10",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x765A98, 0x766458, "mio0", "yoshi_face_11",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x766458, 0x766E68, "mio0", "yoshi_face_12",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x766E68, 0x7678C4, "mio0", "yoshi_face_13",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7678C4, 0x7683A4, "mio0", "yoshi_face_14",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7683A4, 0x768EAC, "mio0", "yoshi_face_15",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x768EAC, 0x7699C4, "mio0", "yoshi_face_16",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7699C4, 0x76A4EC, "mio0", "yoshi_face_17",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76A4EC, 0x76B2D8, "mio0", "dk_face_01",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76B2D8, 0x76C0E0, "mio0", "dk_face_02",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76C0E0, 0x76CEC0, "mio0", "dk_face_03",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76CEC0, 0x76DC70, "mio0", "dk_face_04",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76DC70, 0x76EA18, "mio0", "dk_face_05",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76EA18, 0x76F7FC, "mio0", "dk_face_06",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x76F7FC, 0x770628, "mio0", "dk_face_07",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x770628, 0x7714BC, "mio0", "dk_face_08",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7714BC, 0x772398, "mio0", "dk_face_09",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x772398, 0x7732E0, "mio0", "dk_face_10",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7732E0, 0x774218, "mio0", "dk_face_11",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x774218, 0x77519C, "mio0", "dk_face_12",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77519C, 0x7761A0, "mio0", "dk_face_13",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7761A0, 0x777160, "mio0", "dk_face_14",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x777160, 0x7780AC, "mio0", "dk_face_15",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7780AC, 0x778FAC, "mio0", "dk_face_16",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x778FAC, 0x779F00, "mio0", "dk_face_17",     ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x779F00, 0x77B060, "mio0", "wario_face_01",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77B060, 0x77C1A4, "mio0", "wario_face_02",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77C1A4, 0x77D2F8, "mio0", "wario_face_03",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77D2F8, 0x77E460, "mio0", "wario_face_04",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77E460, 0x77F5B4, "mio0", "wario_face_05",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x77F5B4, 0x780710, "mio0", "wario_face_06",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x780710, 0x781884, "mio0", "wario_face_07",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x781884, 0x782A5C, "mio0", "wario_face_08",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x782A5C, 0x783C84, "mio0", "wario_face_09",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x783C84, 0x784EF0, "mio0", "wario_face_10",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x784EF0, 0x7861D0, "mio0", "wario_face_11",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7861D0, 0x7874D8, "mio0", "wario_face_12",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7874D8, 0x7887BC, "mio0", "wario_face_13",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7887BC, 0x789AE0, "mio0", "wario_face_14",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x789AE0, 0x78ADCC, "mio0", "wario_face_15",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x78ADCC, 0x78C098, "mio0", "wario_face_16",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x78C098, 0x78D210, "mio0", "wario_face_17",  ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x78D210, 0x78E4F8, "mio0", "bowser_face_01", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x78E4F8, 0x78F7AC, "mio0", "bowser_face_02", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x78F7AC, 0x790A74, "mio0", "bowser_face_03", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x790A74, 0x791D40, "mio0", "bowser_face_04", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x791D40, 0x792FE4, "mio0", "bowser_face_05", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x792FE4, 0x794270, "mio0", "bowser_face_06", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x794270, 0x79554C, "mio0", "bowser_face_07", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79554C, 0x796834, "mio0", "bowser_face_08", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x796834, 0x797B24, "mio0", "bowser_face_09", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x797B24, 0x798E40, "mio0", "bowser_face_10", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x798E40, 0x79A10C, "mio0", "bowser_face_11", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79A10C, 0x79B448, "mio0", "bowser_face_12", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79B448, 0x79C7EC, "mio0", "bowser_face_13", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79C7EC, 0x79DB68, "mio0", "bowser_face_14", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79DB68, 0x79EEAC, "mio0", "bowser_face_15", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x79EEAC, 0x7A01F4, "mio0", "bowser_face_16", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7A01F4, 0x7A1418, "mio0", "bowser_face_17", ( (0x00000, "rgba", 16, 64, 64)) ),
   (0x7A1418, 0x7A4570, "mio0", "preview_mario_raceway",      ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7A4570, 0x7A6F94, "mio0", "preview_choco_mountain",     ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7A6F94, 0x7AA074, "mio0", "preview_bowsers_castle",     ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7AA074, 0x7AC720, "mio0", "preview_banshee_boardwalk",  ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7AC720, 0x7B0160, "mio0", "preview_yoshi_valley",       ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7B0160, 0x7B2568, "mio0", "preview_frappe_snowland",    ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7B2568, 0x7B488C, "mio0", "preview_koopa_troopa_beach", ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7B488C, 0x7B70AC, "mio0", "preview_royal_raceway",      ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7B70AC, 0x7B9E20, "mio0", "preview_luigi_raceway",      ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7B9E20, 0x7BC3E8, "mio0", "preview_moo_moo_farm",       ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7BC3E8, 0x7BED84, "mio0", "preview_toads_turnpike",     ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7BED84, 0x7C1590, "mio0", "preview_kalimari_desert",    ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7C1590, 0x7C45A0, "mio0", "preview_sherbet_land",       ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7C45A0, 0x7C6DC4, "mio0", "preview_rainbow_road",       ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7C6DC4, 0x7CA098, "mio0", "preview_wario_stadium",      ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7CA098, 0x7CC5C0, "mio0", "preview_block_fort",         ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7CC5C0, 0x7CECB0, "mio0", "preview_skyscraper",         ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7CECB0, 0x7D15A8, "mio0", "preview_double_deck",        ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7D15A8, 0x7D548C, "mio0", "preview_dks_jungle_parkway", ( (0x00000, "rgba", 16, 128, 72)) ),
   (0x7D548C, 0x7D83E8, "mio0", "preview_big_donut",          ( (0x00000, "rgba", 16, 128, 72)) ),
   // MIO0 compressed display list loaded into segment 0x6
   (0x8284D0, 0x82B620, "mio0", "level_mario_raceway_dl"),
   (0x82B620, 0x82DF40, "mio0", "level_choco_mountain_dl"),
   (0x82DF40, 0x831DC0, "mio0", "level_bowsers_castle_dl"),
   (0x831DC0, 0x835BA0, "mio0", "level_banshee_boardwalk_dl"),
   (0x835BA0, 0x83F740, "mio0", "level_yoshi_valley_dl"),
   (0x83F740, 0x842E40, "mio0", "level_frappe_snowland_dl"),
   (0x842E40, 0x84ABD0, "mio0", "level_koopa_troopa_beach_dl"),
   (0x84ABD0, 0x84E8E0, "mio0", "level_royal_raceway_dl"),
   (0x84E8E0, 0x852E20, "mio0", "level_luigi_raceway_dl"),
   (0x852E20, 0x857E80, "mio0", "level_moo_moo_farm_dl"),
   (0x857E80, 0x8666A0, "mio0", "level_toads_turnpike_dl"),
   (0x8666A0, 0x86ECF0, "mio0", "level_kalimari_desert_dl"),
   (0x86ECF0, 0x872A00, "mio0", "level_sherbet_land_dl"),
   (0x872A00, 0x8804A0, "mio0", "level_rainbow_road_dl"),
   (0x8804A0, 0x885630, "mio0", "level_wario_stadium_dl"),
   (0x885630, 0x885780, "mio0", "level_block_fort_dl"),
   (0x885780, 0x8858A0, "mio0", "level_skyscraper_dl"),
   (0x8858A0, 0x885A10, "mio0", "level_double_deck_dl"),
   (0x885A10, 0x88CC50, "mio0", "level_dks_jungle_parkway_dl"),
   (0x88CC50, 0x88CD70, "mio0", "level_big_donut_dl"),
   // some sort of level data loaded into segment 0x9
   (0x88CD70, 0x88D070, "bin",  "level_mario_raceway_data"),
   (0x88D070, 0x88D340, "bin",  "level_choco_mountain_data"),
   (0x88D340, 0x88D6C0, "bin",  "level_bowsers_castle_data"),
   (0x88D6C0, 0x88D9C0, "bin",  "level_banshee_boardwalk_data"),
   (0x88D9C0, 0x88DAB0, "bin",  "level_yoshi_valley_data"),
   (0x88DAB0, 0x88DB40, "bin",  "level_frappe_snowland_data"),
   (0x88DB40, 0x88DC50, "bin",  "level_koopa_troopa_beach_data"),
   (0x88DC50, 0x88E120, "bin",  "level_royal_raceway_data"),
   (0x88E120, 0x88E590, "bin",  "level_luigi_raceway_data"),
   (0x88E590, 0x88E8D0, "bin",  "level_moo_moo_farm_data"),
   (0x88E8D0, 0x88ECD0, "bin",  "level_toads_turnpike_data"),
   (0x88ECD0, 0x88EFB0, "bin",  "level_kalimari_desert_data"),
   (0x88EFB0, 0x88F2A0, "bin",  "level_sherbet_land_data"),
   (0x88F2A0, 0x88F300, "bin",  "level_rainbow_road_data"),
   (0x88F300, 0x88F600, "bin",  "level_wario_stadium_data"),
   (0x88F600, 0x88F680, "bin",  "level_block_fort_data"),
   (0x88F680, 0x88F800, "bin",  "level_skyscraper_data"),
   (0x88F800, 0x88F830, "bin",  "level_double_deck_data"),
   (0x88F830, 0x88F9C0, "bin",  "level_dks_jungle_parkway_data"),
   (0x88F9C0, 0x88FA10, "bin",  "level_big_donut_data"),
   // MIO0 compressed vertex data loaded into segment 0xF
   (0x88FA10, 0x89B510, "mio0", "level_mario_raceway_vertex"),
   (0x89B510, 0x8A7640, "mio0", "level_choco_mountain_vertex"),
   (0x8A7640, 0x8B9630, "mio0", "level_bowsers_castle_vertex"),
   (0x8B9630, 0x8C2510, "mio0", "level_banshee_boardwalk_vertex"),
   (0x8C2510, 0x8CC900, "mio0", "level_yoshi_valley_vertex"),
   (0x8CC900, 0x8D8E50, "mio0", "level_frappe_snowland_vertex"),
   (0x8D8E50, 0x8EC390, "mio0", "level_koopa_troopa_beach_vertex"),
   (0x8EC390, 0x8FE640, "mio0", "level_royal_raceway_vertex"),
   (0x8FE640, 0x90B3E0, "mio0", "level_luigi_raceway_vertex"),
   (0x90B3E0, 0x91B980, "mio0", "level_moo_moo_farm_vertex"),
   (0x91B980, 0x928C70, "mio0", "level_toads_turnpike_vertex"),
   (0x928C70, 0x936FD0, "mio0", "level_kalimari_desert_vertex"),
   (0x936FD0, 0x93CC60, "mio0", "level_sherbet_land_vertex"),
   (0x93CC60, 0x9438C0, "mio0", "level_rainbow_road_vertex"),
   (0x9438C0, 0x951780, "mio0", "level_wario_stadium_vertex"),
   (0x951780, 0x953890, "mio0", "level_block_fort_vertex"),
   (0x953890, 0x955620, "mio0", "level_skyscraper_vertex"),
   (0x955620, 0x956670, "mio0", "level_double_deck_vertex"),
   (0x956670, 0x963EF0, "mio0", "level_dks_jungle_parkway_vertex"),
   (0x963EF0, 0x966260, "mio0", "level_big_donut_vertex"),
   // Yet to be decoded - include as binary
   (0x966260, 0xBC5F60, "bin"),
   (0xBC5F60, 0xBE90D0, "m64"),
   (0xBE90E0, 0xBE9160, "instrset", "instrument_set", 0x1E)
);

// Labels for functions or data memory addresses
// All label addresses are RAM addresses
// Order does not matter
labels =
(
   (0x80000400, "EntryPoint"),
   (0x80000450, "CreateThread"),
   (0x80000484, "Main"),
   (0x800004E0, "Thread1_Idle"),
   (0x800005E0, "SetupMessageQueues"),
   (0x800008A4, "_InitControllers"),
   (0x80001158, "DmaCopy"),
   (0x800023E4, "Thread3_Main"),
   (0x8000277C, "Thread5_Debug"),
   (0x800028E4, "Thread4"),
   (0x80003FD4, "ResourceDisplay"),
   (0x800067C4, "SetPlaces"),
   (0x800115F4, "ProcessPathData"),
   (0x800400D0, "mio0decode"), // A0=in, A1=out
   (0x800404C0, "mio0encode"),
   (0x800405D0, "tkmk00decode"),
   (0x80057484, "DebugPrintString"), // A0=*X, A1=*Y, A2=str: A0,A1 point to X,Y which are updated to (end of string, next line)
   (0x80057524, "DebugPrintNumber"), // A0=*X, A1=*Y, A2=num, A3=base: hex < 0x80000000 works
   (0x80057554, "DebugNumberSignCheck"),
   (0x80057710, "LoadDebugFont"),
   (0x800577D0, "PrintStrNum"), // A0=X, A1=Y, A2=text, A3=number: prints a string followed by decimal num
   (0x800930D8, "SetTextColor"), // A0=color (00=blue 01=green 02=red 03=yellow 04=cool transition through them, 05=same transition, 06+=glitches)
   (0x800936EC, "DrawText"), // A0=X, A1=Y, A2=str, A3=pixels between each letter, SP[10]=float xscale, SP[14]=float yscale
   (0x80098DF8, "DrawBox"), // A0=probably VRAM dest, A1=X, A2=Y, A3=EndX, SP[10]=EndY, SP[14]=R, SP[18]=G, SP[1C]=B, SP[20]=A
   (0x8002F35C, "ControlCpuMovement"),
   (0x80093134, "PrintText0"),
   (0x8009338C, "PrintText1"),
   (0x80093788, "PrintText2"),
   (0x80099000, "DmaCopyBase729A30"),
   (0x80099088, "DmaCopyBase7FA3C0"),
   (0x80099124, "SegmentedToVirtual"),
   (0x80099154, "SegmentedToVirtualDupe"),
   (0x800C4148, "PlaySound"),
   (0x800C8E10, "PlaySound2"),
   (0x800CBF70, "osCreateThread"),
   (0x800CC0C0, "osInitialize"),
   (0x800CC360, "osStartThread"),
   (0x800CC4B0, "osCreateViManager"),
   (0x800CC638, "__osViDevMgrMain"),
   (0x800CC850, "osViSetMode"),
   (0x800CC8C0, "osViBlack"),
   (0x800CC930, "osViSetSpecialFeatures"),
   (0x800CCAF0, "osCreatePiManager"),
   (0x800CCC80, "osSetThreadPri"),
   (0x800CCD60, "osCreateMesgQueue"),
   (0x800CCD90, "osViSetEventMsg"),
   (0x800CCE00, "osSetEventMsg"),
   (0x800CCE70, "osSpTaskDunno"),
   (0x800CCF8C, "osSpTaskLoad"),
   (0x800CD0EC, "osSpTaskStartGo"),
   (0x800CD130, "osContInit"),
   (0x800CD328, "__osContGetInitData"),
   (0x800CD3F8, "__osPackRequestData"),
   (0x800CD4F0, "osContStartReadData"),
   (0x800CD5B4, "osContGetReadData"),
   (0x800CD750, "osRecvMesg"),
   (0x800CD890, "osWriteBackDCacheAll"),
   (0x800CD8C0, "osSendMesg"),
   (0x800CDA10, "osViSwapBuffer"),
   (0x800CDA60, "bzero"),
   (0x800CDB00, "osInvalCache"),
   (0x800CDB80, "osInvalDCache"),
   (0x800CDC30, "osPiStartDma"),
   (0x800CDD40, "osSpTaskYield"),
   (0x800CDDE0, "osGetTime"),
   (0x800CDE70, "__ull_rshift"),
   (0x800CDE9C, "__ull_rem"),
   (0x800CDED8, "__ull_div"),
   (0x800CDF14, "__ll_lshift"),
   (0x800CDF40, "__ll_rem"),
   (0x800CDF7C, "__ll_div"),
   (0x800CDFD8, "__ll_mul"),
   (0x800CE008, "__ull_divremi"),
   (0x800CE068, "__ll_mod"),
   (0x800CE104, "__ll_rshift"),
   (0x800CE140, "sqrtf"),
   (0x800CE150, "guOrthoF"),
   (0x800CE2A4, "guFrustum"),
   (0x800CE310, "osSetTime"),
   (0x800CE340, "osEepromProbe"),
   (0x800CF060, "guScaleF"),
   (0x800CF0B4, "guScale"),
   (0x800CF100, "guPerspectiveF"),
   (0x800CF330, "guPerspective"),
   (0x800D0050, "osEepromLongWrite"),
   (0x800D0190, "osEepromLongRead"),
   (0x800D0F80, "osAiSetFrequency"),
   (0x800D10E0, "osAiGetLength"),
   (0x800D10F0, "osAiSetNextBuffer"),
   (0x800D11A0, "osGetCount"),
   (0x800D11B0, "__osExceptionPreamble"),
   (0x800D11C0, "__osExceptionHandler"),
   (0x800D17CC, "__osEnqueueAndYield"),
   (0x800D18CC, "__osEnqueueThread"),
   (0x800D1914, "__osPopThread"),
   (0x800D1924, "__osDispatchThread"),
   (0x800D1AA0, "__osCleanupThread", 0x800D1AA8),
   (0x800D1AB0, "__osDisableInt"),
   (0x800D1AD0, "__osRestoreInt"),
   (0x800D1B40, "__osGetSR"),
   (0x800D1B50, "__osSetFpcCsr"),
   (0x800D1B60, "__osSiRawReadIo"),
   (0x800D1BB0, "__osSiRawWriteIo"),
   (0x800D1C00, "osWriteBackDCache"),
   (0x800D1CE0, "osEPiRawReadIo"),
   (0x800D2610, "__osTimerServicesInit"),
   (0x800D269C, "__osTimerInterrupt"),
   (0x800D2814, "__osSetTimerIntr"),
   (0x800D2888, "__osInsertTimer"),
   (0x800D2A10, "osGetThreadPri"),
   (0x800D2A30, "__osViInit"),
   (0x800D2EF0, "__osPiCreateAccessQueue"),
   (0x800D2F40, "__osPiGetAccess"),
   (0x800D2F84, "__osPiRelAccess"),
   (0x800D2FB0, "osPiRawStartDma"),
   (0x800D3520, "bcopy"),
   (0x800D3830, "osVirtualToPhysical"),
   (0x800D38B0, "__osSpSetStatus"),
   (0x800D38C0, "__osSpSetPc"),
   (0x800D3900, "__osSpRawStartDma"),
   (0x800D3990, "__osSpDeviceBusy"),
   (0x800D39C0, "osSetTimer"),
   (0x800D3AA0, "__osSiRawStartDma"),
   (0x800D3B50, "__osSiCreateAccessQueue"),
   (0x800D3BA0, "__osSiGetAccess"),
   (0x800D3BE4, "__osSiRelAccess"),
   (0x800D3C10, "osJamMesg"),
   (0x800D3D90, "__osSpGetStatus"),
   (0x800D3DA0, "guMtxF2L"),
   (0x800D3EA0, "guMtxIdentF"),
   (0x800D4010, "osEepromWrite"),
   (0x800D42CC, "__osEepStatus"),
   (0x800D60F0, "sinf"),
   (0x800D62B0, "cosf"),
   (0x800D76A0, "osEepromRead"),
   (0x800D79A0, "__osAiDeviceBusy"),
   (0x800D7A70, "osDestroyThread"),
   (0x800D7B70, "__osSiDeviceBusy"),
   (0x800D7C90, "__osSetCompare"),
   (0x800D7DA0, "__osProbeTLB"),
   (0x800CE8E0, "osPfsNumFiles"),
   (0x800CEA30, "osPfsFileState"),
   (0x800CED20, "osPfsFreeBlocks"),
   (0x800CEE70, "guRotateF"),
   (0x800CF004, "guRotate"),
   (0x800CF390, "guLookAtF"),
   (0x800CF648, "guLookAt"),
   (0x800CF6C0, "guTranslateF"),
   (0x800CF708, "guTranslate"),
   (0x800CF760, "osSyncPrintf"),
   (0x800CF7C0, "guMtxXFML"),
   (0x800CF820, "guMtxCatL"),
   (0x800CF880, "osPfsFindFile"),
   (0x800CFA40, "osPfsDeleteFile"),
   (0x800CFD20, "__osPfsReleasePages"),
   (0x800CFF58, "__osBlockSum"),
   (0x800D02D0, "osPfsReadWriteFile"),
   (0x800D07D0, "osPfsAllocateFile"),
   (0x800D0C54, "__osPfsDeclearPage"),
   (0x800D1AF0, "__osDequeueThread"),
   (0x800D1B30, "__osSetSR"),
   (0x800D1C80, "osMapTLBRdb"),
   (0x800D1D40, "__osSetHWIntrRoutine"),
   (0x800D2B90, "__osViSwapContext"),
   (0x800D3090, "osEPiRawStartDma"),
   (0x800D3D60, "osPiGetCmdQueue"),
   (0x800D3F28, "guMtxIdent"),
   (0x800D3F58, "guMtxL2F"),
   (0x800D44F0, "__osSumcalc"),
   (0x800D454C, "__osIdCheckSum"),
   (0x800D45B4, "__osRepairPackId"),
   (0x800D49CC, "__osCheckPackId"),
   (0x800D4B64, "__osGetId"),
   (0x800D4DC0, "__osCheckId"),
   (0x800D4EBC, "__osPfsRWInode"),
   (0x800D51DC, "__osPfsSelectBank"),
   (0x800D5250, "osPfsChecker"),
   (0x800D5914, "corrupted_init"),
   (0x800D5AC8, "corrupted"),
   (0x800D5CB0, "__osContRamRead"),
   (0x800D6060, "guNormalize"),
   (0x800D6420, "_Printf"),
   (0x800D70E0, "guMtxXFMF"),
   (0x800D7180, "guMtxCatF"),
   (0x800D72F0, "__osContRamWrite"),
   (0x800D79D0, "osSetIntMask"),
   (0x800D7CA0, "__osResetGlobalIntMask"),
   (0x800D7D00, "osEPiRawWriteIo"),
   (0x800D7D50, "osYieldThread"),
   (0x800D7E60, "__osContAddressCrc"),
   (0x800D7F10, "__osContDataCrc"),
   (0x800D800C, "strlen"),
   (0x800D8034, "strchr"),
   (0x800D8080, "_Litob"),
   (0x800D8320, "_Ldtob"),
   (0x800D8DE0, "lldiv"),
   (0x800D8EE0, "ldiv"),
   (0x800D7FE0, "memcpy"),
   (0x8029D584, "PlaceSegment06"),
   (0x8029D60C, "PlaceBushesSegment06"),
   (0x8029D830, "PlaceAllItemBoxes"),
   (0x802A7B94, "SetSegmentBase"),
   (0x802A7BB4, "GetSegmentBase"),
   (0x802A85CC, "MIO0_0F"),
   (0x802A9AF4, "DisplayListUnpacker"),
   (0x802AA918, "LoadLevel"),
   (0x802B7E34, "Random") // A0=max value of random: returns random number between 0 and (A0-1)
);
