// ROM splitter configuration file
name = "Mario Kart 64 (U)";

// base filename used for outputs (please, no spaces)
basename = "mk64.u";

// memory map from KSEG0 RAM addresses to ROM offsets
// these were decoded from DMA accesses
// 8028DF00-802BA100 were copied in FF chunks for some reason
memory =
(
   // start     end         ram-to-rom
   // (0x80000400, 0x80100400, 0x7FFFF400), // 001000-100FFF 100000
   (0x80000400, 0x800F690F, 0x7FFFF400), // 001000-0F750F 0F650F
   (0x8028DF00, 0x802BA0FF, 0x801969F0)  // 0F7510-12361F 02C1FF
);

// ranges to split the ROM into
// types:
//   asm      - MIPS assembly block.  Symbol names are in 'labels' list below
//   behavior - behavior script
//   bin      - raw binary, usually data
//   header   - ROM header block
//   level    - level commands
//   mio0     - MIO0 compressed data block.  may have texture breakdown
//   ptr      - RAM address or ROM offset pointer
//
//   textures types:
//      rgba   - 16-bit RGBA (5-5-5-1)
//      ia     - 16/8-bit greyscale
//      skybox - grid of 32x32 16-bit RGBA
ranges =
(
   // start,  end,      type,     label
   (0x000000, 0x000040, "header", "header"),
   (0x000040, 0x001000, "bin",    "boot"),
   (0x001000, 0x0DD044, "asm"),
   // 0x0DD044, 0x0F7510, data
//   (0x0F3A84, 0x0F3A98, "ptr",    "JumpTable"), // 800F2E84
//   (0x0F3AE0, 0x0F3B04, "ptr",    "JumpTable"), // 800F2EE0
   (0x0F7510, 0x123610, "asm"), // TODO: not sure if this is all asm
   (0x132B50, 0x145470, "mio0", "some_textures", (
      //offset, type, depth,width,height
      (0x00200, "rgba", 16,  32, 64),
      (0x01EE8, "rgba", 16,  32, 64),
      (0x03348, "rgba", 16,  32, 32),
      (0x03B48, "rgba", 16,  64, 32),
      (0x06AD8, "ia",    8,  32, 32),
      (0x09958, "ia",    8,  32, 96),
      (0x0A958, "rgba", 16,  32,  8),
      (0x0AB58, "rgba", 16,  32,  8),
      (0x0AD58, "rgba", 16,  32, 16),
      (0x0B158, "rgba", 16,  32, 16),
      (0x0B558, "rgba", 16,  32, 16),
      (0x0B958, "rgba", 16,  32, 16),
      (0x0BD58, "rgba", 16,  32, 16),
      (0x0C158, "rgba", 16,  32, 16),
      (0x0C558, "rgba", 16, 104, 16),
      (0x0D258, "ia",    8,  64, 64),
      (0x0E258, "ia",    8,  64, 64),
      (0x0F258, "ia",    8,  64, 64),
      (0x10258, "ia",    8,  64, 64),
      (0x11258, "ia",    8,  64, 64),
      (0x12258, "ia",    8,  64, 64),
      (0x13258, "ia",    8,  64, 64),
      (0x14258, "ia",    8,  64, 64),
      (0x15258, "ia",    4,  64, 64),
      (0x15A58, "ia",    4,  64, 64),
      (0x16258, "ia",    4,  64, 64),
      (0x16A58, "ia",    4,  64, 64))
   ),
   (0x7A1418, 0x7A4570, "mio0", "preview_mario_raceway", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7A4570, 0x7A6F94, "mio0", "preview_choco_mountain", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7A6F94, 0x7AA074, "mio0", "preview_bowsers_castle", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7AA074, 0x7AC720, "mio0", "preview_banshee_boardwalk", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7AC720, 0x7B0160, "mio0", "preview_yoshi_valley", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7B0160, 0x7B2568, "mio0", "preview_frappe_snowland", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7B2568, 0x7B488C, "mio0", "preview_koopa_troopa_beach", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7B488C, 0x7B70AC, "mio0", "preview_royal_raceway", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7B70AC, 0x7B9E20, "mio0", "preview_luigi_raceway", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7B9E20, 0x7BC3E8, "mio0", "preview_moo_moo_farm", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7BC3E8, 0x7BED84, "mio0", "preview_toads_turnpike", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7BED84, 0x7C1590, "mio0", "preview_kalimari_desert", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7C1590, 0x7C45A0, "mio0", "preview_sherbet_land", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7C45A0, 0x7C6DC4, "mio0", "preview_rainbow_road", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7C6DC4, 0x7CA098, "mio0", "preview_wario_stadium", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7CA098, 0x7CC5C0, "mio0", "preview_block_fort", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7CC5C0, 0x7CECB0, "mio0", "preview_skyscraper", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7CECB0, 0x7D15A8, "mio0", "preview_double_deck", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7D15A8, 0x7D548C, "mio0", "preview_dks_jungle_parkway", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   (0x7D548C, 0x7D83E8, "mio0", "preview_big_donut", (
      (0x00000, "rgba", 16, 128, 72))
   ),
   // Yet to be decoded - include as binary
   (0x7D83E8, 0xC00000, "bin")
);

// Labels for functions or data memory addresses
// All label addresses are RAM addresses
// Order does not matter
labels =
(
   (0x80000400, "EntryPoint"),
   (0x80000450, "CreateThread"),
   (0x80000484, "Main"),
   (0x800004E0, "Thread1_Idle"),
   (0x800005E0, "SetupMessageQueues"),
   (0x800008A4, "_InitControllers"),
   (0x800023E4, "Thread3_Main"),
   //(0x8000277C, "Thread5_Debug"), TODO: this causes n64split to run away
   (0x800028E4, "Thread4"),
   (0x800400D0, "mio0decode"),
   (0x800404C0, "mio0encode"),
   (0x800405D0, "tkmk00decode"),
   (0x80099124, "SegmentedToVirtualDupe"),
   (0x80099154, "SegmentedToVirtual"),
   (0x800CBF70, "osCreateThread"),
   (0x800CC0C0, "osInitialize"),
   (0x800CC360, "osStartThread"),
   (0x800CC4B0, "osCreateViManager"),
   (0x800CC638, "__osViDevMgrMain"),
   (0x800CC850, "osViSetMode"),
   (0x800CC8C0, "osViBlack"),
   (0x800CC930, "osViSetSpecialFeatures"),
   (0x800CCAF0, "osCreatePiManager"),
   (0x800CCC80, "osSetThreadPri"),
   (0x800CCD60, "osCreateMesgQueue"),
   (0x800CCD90, "osViSetEventMsg"),
   (0x800CCE00, "osSetEventMsg"),
   (0x800CCE70, "osSpTaskDunno"),
   (0x800CCF8C, "osSpTaskLoad"),
   (0x800CD0EC, "osSpTaskStartGo"),
   (0x800CD130, "osContInit"),
   (0x800CD328, "__osContGetInitData"),
   (0x800CD3F8, "__osPackRequestData"),
   (0x800CD4F0, "osContStartReadData"),
   (0x800CD5B4, "osContGetReadData"),
   (0x800CD750, "osRecvMesg"),
   (0x800CD890, "osWriteBackDCacheAll"),
   (0x800CD8C0, "osSendMesg"),
   (0x800CDA10, "osViSwapBuffer"),
   (0x800CDA60, "bzero"),
   (0x800CDB00, "osInvalCache"),
   (0x800CDB80, "osInvalDCache"),
   (0x800CDD40, "osSpTaskYield"),
   (0x800CDDE0, "osGetTime"),
   (0x800CDE70, "__ull_rshift"),
   (0x800CDE9C, "__ull_rem"),
   (0x800CDED8, "__ull_div"),
   (0x800CDF14, "__ll_lshift"),
   (0x800CDF40, "__ll_rem"),
   (0x800CDF7C, "__ll_div"),
   (0x800CDFD8, "__ll_mul"),
   (0x800CE008, "__ull_divremi"),
   (0x800CE068, "__ll_mod"),
   (0x800CE104, "__ll_rshift"),
   (0x800CE140, "sqrtf"),
   (0x800CE150, "guOrthoF"),
   (0x800CE2A4, "guFrustum"),
   (0x800CE310, "osSetTime"),
   (0x800CE340, "osEepromProbe"),
   (0x800CF060, "guRotateRPYF"),
   (0x800CF0B4, "guRotateRPY"),
   (0x800CF100, "guPerspectiveF"),
   (0x800CF330, "guPerspective"),
   (0x800D0050, "osEepromLongWrite"),
   (0x800D0190, "osEepromLongRead"),
   (0x800D0F80, "osAiSetFrequency"),
   (0x800D10E0, "osAiGetLength"),
   (0x800D10F0, "osAiSetNextBuffer"),
   (0x800D11A0, "osGetCount"),
   (0x800D11B0, "__osExceptionPreamble"),
   (0x800D11C0, "__osExceptionHandler"),
   (0x800D17CC, "__osEnqueueAndYield"),
   (0x800D18CC, "__osEnqueueThread"),
   (0x800D1914, "__osPopThread"),
   (0x800D1924, "__osDispatchThread"),
   (0x800D1AA0, "__osCleanupThread", 0x800D1AA8),
   (0x800D1AB0, "__osDisableInt"),
   (0x800D1AD0, "__osRestoreInt"),
   (0x800D1B40, "__osGetSR"),
   (0x800D1B50, "__osSetFpcCsr"),
   (0x800D1B60, "__osSiRawReadIo"),
   (0x800D1BB0, "__osSiRawWriteIo"),
   (0x800D1C00, "osWriteBackDCache"),
   (0x800D1CE0, "osEPiRawReadIo"),
   (0x800D2610, "__osTimerServicesInit"),
   (0x800D269C, "__osTimerInterrupt"),
   (0x800D2814, "__osSetTimerIntr"),
   (0x800D2888, "__osInsertTimer"),
   (0x800D2A10, "osGetThreadPri"),
   (0x800D2A30, "__osViInit"),
   (0x800D2EF0, "__osPiCreateAccessQueue"),
   (0x800D2F40, "__osPiGetAccess"),
   (0x800D2F84, "__osPiRelAccess"),
   (0x800D2FB0, "osPiRawStartDma"),
   (0x800D3520, "bcopy"),
   (0x800D3830, "osVirtualToPhysical"),
   (0x800D38B0, "__osSpSetStatus"),
   (0x800D38C0, "__osSpSetPc"),
   (0x800D3900, "__osSpRawStartDma"),
   (0x800D3990, "__osSpDeviceBusy"),
   (0x800D39C0, "osSetTimer"),
   (0x800D3AA0, "__osSiRawStartDma"),
   (0x800D3B50, "__osSiCreateAccessQueue"),
   (0x800D3BA0, "__osSiGetAccess"),
   (0x800D3BE4, "__osSiRelAccess"),
   (0x800D3C10, "osJamMesg"),
   (0x800D3D90, "__osSpGetStatus"),
   (0x800D3DA0, "guMtxF2L"),
   (0x800D3EA0, "guMtxIdentF"),
   (0x800D4010, "osEepromWrite"),
   (0x800D42CC, "__osEepStatus"),
   (0x800D60F0, "sinf"),
   (0x800D62B0, "cosf"),
   (0x800D76A0, "osEepromRead"),
   (0x800D79A0, "__osAiDeviceBusy"),
   (0x800D7A70, "osDestroyThread"),
   (0x800D7B70, "__osSiDeviceBusy"),
   (0x800D7C90, "__osSetCompare"),
   (0x800D7DA0, "__osProbeTLB"),
   (0x800D7FE0, "memcpy"),
   (0x802A7B94, "SetSegmentBase"),
   (0x802A7BB4, "GetSetmentBase")
);

